{
  "address": "0xE2B8D885973A5aa4B9C291a8Ebe2E86eB5AaC1f6",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x948f4d638f67e9b53801bcf2c912b87e15c9bb2767ca9e13a19327c9efaea8bf",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x1ef5aB98912BB73c01C6846a9208475eaC6432bB",
    "contractAddress": null,
    "transactionIndex": 11,
    "gasUsed": "1176865",
    "logsBloom": "0x
    "blockHash": "0x5432311e9aac3937845c9f84add528af728a477d35d49d5a4803071bd13bd6c4",
    "transactionHash": "0x948f4d638f67e9b53801bcf2c912b87e15c9bb2767ca9e13a19327c9efaea8bf",
    "logs": [],
    "blockNumber": 10602989,
    "cumulativeGasUsed": "12451884",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e787e50d6c41b80f1e380d6403a6e1ff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"EIP2325 implementation by DefiCake (https://github.com/DefiCake), based on solmate. Additional features:             - onBeforeTokenTransfer hook\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Modern, minimalist, and gas efficient ERC-721 implementation. Based on Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/nft/facets/ERC721Facet.sol\":\"ERC721Facet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"contracts/interfaces/IBeforeTokenTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0;\\n\\ninterface IBeforeTokenTransfer {\\n    function beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n}\\n\",\"keccak256\":\"0xb100c8489af6e359566e8c92d5c6aa8e357a3ba11ee9941cd398ea9dcebc80bc\",\"license\":\"MIT\"},\"contracts/nft/facets/ERC721Facet.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\nimport '../libraries/ERC721Lib.sol';\\nimport { UsingMintRole, MintRoleLib } from '../libraries/MintRoleLib.sol';\\nimport '../../interfaces/IBeforeTokenTransfer.sol';\\nimport '@openzeppelin/contracts/utils/Strings.sol';\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\\n\\n/// @notice Modern, minimalist, and gas efficient ERC-721 implementation. Based on Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)\\n/// @author EIP2325 implementation by DefiCake (https://github.com/DefiCake), based on solmate. Additional features:\\n///             - onBeforeTokenTransfer hook\\n\\ncontract ERC721Facet is UsingMintRole {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 indexed id);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 indexed id);\\n\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                         METADATA STORAGE/LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function name() public pure returns (string memory) {\\n        return 'RubyNFT';\\n    }\\n\\n    function symbol() public pure returns (string memory) {\\n        return 'RUBY';\\n    }\\n\\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\\n        require(ERC721Lib.Storage()._ownerOf[tokenId] != address(0), 'NOT_MINTED');\\n        return string(abi.encodePacked('https://deficake/', Strings.toString(tokenId)));\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                      ERC721 BALANCE/OWNER STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    // mapping(uint256 => address) internal _ownerOf; => Moved to ERC721Lib.sol\\n    // mapping(address => uint256) internal _balanceOf; => Moved to ERC721Lib.sol\\n\\n    function ownerOf(uint256 id) public view virtual returns (address owner) {\\n        require((owner = ERC721Lib.Storage()._ownerOf[id]) != address(0), 'NOT_MINTED');\\n    }\\n\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        require(owner != address(0), 'ZERO_ADDRESS');\\n\\n        return ERC721Lib.Storage()._balanceOf[owner];\\n    }\\n\\n    function totalSupply() public view returns (uint256) {\\n        return ERC721Lib.Storage().totalSupply;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                         ERC721 APPROVAL STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    // mapping(uint256 => address) public getApproved; => Moved to ERC721Lib.sol\\n    // mapping(address => mapping(address => bool)) public isApprovedForAll; => Moved to ERC721Lib.sol\\n\\n    function getApproved(uint256 id) public view returns (address) {\\n        return ERC721Lib.Storage().getApproved[id];\\n    }\\n\\n    function isApprovedForAll(address owner, address operator) public view returns (bool) {\\n        return ERC721Lib.Storage().isApprovedForAll[owner][operator];\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC721 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 id) public virtual {\\n        ERC721Lib.ERC721Storage storage s = ERC721Lib.Storage();\\n\\n        address owner = s._ownerOf[id];\\n\\n        require(msg.sender == owner || s.isApprovedForAll[owner][msg.sender], 'NOT_AUTHORIZED');\\n\\n        s.getApproved[id] = spender;\\n\\n        emit Approval(owner, spender, id);\\n    }\\n\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        ERC721Lib.Storage().isApprovedForAll[msg.sender][operator] = approved;\\n        emit ApprovalForAll(msg.sender, operator, approved);\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        ERC721Lib.ERC721Storage storage s = ERC721Lib.Storage();\\n\\n        require(from == s._ownerOf[id], 'WRONG_FROM');\\n\\n        require(to != address(0), 'INVALID_RECIPIENT');\\n\\n        require(\\n            msg.sender == from || s.isApprovedForAll[from][msg.sender] || msg.sender == s.getApproved[id],\\n            'NOT_AUTHORIZED'\\n        );\\n\\n        IBeforeTokenTransfer(address(this)).beforeTokenTransfer(from, to, id);\\n\\n        // Underflow of the sender's balance is impossible because we check for\\n        // ownership above and the recipient's balance can't realistically overflow.\\n        unchecked {\\n            s._balanceOf[from]--;\\n\\n            s._balanceOf[to]++;\\n        }\\n\\n        s._ownerOf[id] = to;\\n\\n        delete s.getApproved[id];\\n\\n        emit Transfer(from, to, id);\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                IERC721Receiver(to).onERC721Received(msg.sender, from, id, '') ==\\n                IERC721Receiver.onERC721Received.selector,\\n            'UNSAFE_RECIPIENT'\\n        );\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        bytes calldata data\\n    ) public virtual {\\n        transferFrom(from, to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                IERC721Receiver(to).onERC721Received(msg.sender, from, id, data) ==\\n                IERC721Receiver.onERC721Received.selector,\\n            'UNSAFE_RECIPIENT'\\n        );\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function mint(address to, uint256 id) external onlyMinter {\\n        _mint(to, id);\\n    }\\n\\n    function safeMint(address to, uint256 id) external onlyMinter {\\n        _safeMint(to, id);\\n    }\\n\\n    function safeMint(\\n        address to,\\n        uint256 id,\\n        bytes calldata data\\n    ) external onlyMinter {\\n        _safeMint(to, id, data);\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 id) internal virtual {\\n        require(to != address(0), 'INVALID_RECIPIENT');\\n\\n        ERC721Lib.ERC721Storage storage s = ERC721Lib.Storage();\\n\\n        require(s._ownerOf[id] == address(0), 'ALREADY_MINTED');\\n\\n        IBeforeTokenTransfer(address(this)).beforeTokenTransfer(address(0), to, id);\\n\\n        // Counter overflow is incredibly unrealistic.\\n        unchecked {\\n            s.totalSupply++;\\n            s._balanceOf[to]++;\\n        }\\n\\n        s._ownerOf[id] = to;\\n\\n        emit Transfer(address(0), to, id);\\n    }\\n\\n    /// @notice burn disabled\\n    // function _burn(uint256 id) internal virtual {\\n    //     ERC721Lib.ERC721Storage storage s = ERC721Lib.Storage();\\n\\n    //     address owner = s._ownerOf[id];\\n\\n    //     require(owner != address(0), 'NOT_MINTED');\\n\\n    //     // Ownership check above ensures no underflow.\\n    //     unchecked {\\n    //         s.totalSupply--;\\n    //         s._balanceOf[owner]--;\\n    //     }\\n\\n    //     delete s._ownerOf[id];\\n\\n    //     delete s.getApproved[id];\\n\\n    //     emit Transfer(owner, address(0), id);\\n    // }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL SAFE MINT LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _safeMint(address to, uint256 id) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                IERC721Receiver(to).onERC721Received(msg.sender, address(0), id, '') ==\\n                IERC721Receiver.onERC721Received.selector,\\n            'UNSAFE_RECIPIENT'\\n        );\\n    }\\n\\n    function _safeMint(\\n        address to,\\n        uint256 id,\\n        bytes calldata data\\n    ) internal virtual {\\n        _mint(to, id);\\n\\n        require(\\n            to.code.length == 0 ||\\n                IERC721Receiver(to).onERC721Received(msg.sender, address(0), id, data) ==\\n                IERC721Receiver.onERC721Received.selector,\\n            'UNSAFE_RECIPIENT'\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x4bb8109d28225ac85529e483f39a45f9bbc679bdb2af526b496a27d2e1ac1ca8\",\"license\":\"AGPL-3.0-only\"},\"contracts/nft/libraries/ERC721Lib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary ERC721Lib {\\n    bytes32 constant STORAGE_POSITION = keccak256('eth.rubynft.storage');\\n\\n    struct ERC721Storage {\\n        uint256 totalSupply;\\n        mapping(uint256 => address) _ownerOf;\\n        mapping(address => uint256) _balanceOf;\\n        mapping(uint256 => address) getApproved;\\n        mapping(address => mapping(address => bool)) isApprovedForAll;\\n    }\\n\\n    function Storage() internal pure returns (ERC721Storage storage ds) {\\n        bytes32 position = STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd0553450ce68ec805113706f7b80055b01e5aeae1278c3a9b27586f6856d6833\",\"license\":\"MIT\"},\"contracts/nft/libraries/MintRoleLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary MintRoleLib {\\n    bytes32 constant STORAGE_POSITION = keccak256('eth.mintrole.storage');\\n\\n    struct MintRoleStorage {\\n        mapping(address => bool) isMinter;\\n    }\\n\\n    function Storage() internal pure returns (MintRoleStorage storage ds) {\\n        bytes32 position = STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n}\\n\\ncontract UsingMintRole {\\n    modifier onlyMinter() {\\n        require(MintRoleLib.Storage().isMinter[msg.sender], 'NOT_MINTER');\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x66738b6555fb4bb7b5298759015f58e0cbc2ffc0854d7c28d86cad43fa5470e9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a22cb46511610066578063a22cb46514610273578063b88d4fde14610286578063c87b56dd14610299578063e985e9c5146102ac57600080fd5b806370a082311461021a5780638832e6e31461022d57806395d89b4114610240578063a14481941461026057600080fd5b806323b872dd116100d357806323b872dd146101ce57806340c10f19146101e157806342842e0e146101f45780636352211e1461020757600080fd5b806306fdde0314610105578063081812fc1461013a578063095ea7b31461019a57806318160ddd146101af575b600080fd5b604080518082019091526007815266149d589e53919560ca1b60208201525b6040516101319190611287565b60405180910390f35b6101826101483660046111e5565b60009081527f57b5988df17516e060374e0264a58e0f7554bffd3e2b9548bacecce82610e27860205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610131565b6101ad6101a836600461113c565b610317565b005b6000805160206113d3833981519152545b604051908152602001610131565b6101ad6101dc36600461105a565b610420565b6101ad6101ef36600461113c565b610677565b6101ad61020236600461105a565b6106d3565b6101826102153660046111e5565b6107b7565b6101c0610228366004611007565b61081b565b6101ad61023b366004611165565b61089d565b6040805180820190915260048152635255425960e01b6020820152610124565b6101ad61026e36600461113c565b6108fd565b6101ad610281366004611102565b610955565b6101ad610294366004611095565b6109e0565b6101246102a73660046111e5565b610ab4565b6103076102ba366004611028565b6001600160a01b0391821660009081527f57b5988df17516e060374e0264a58e0f7554bffd3e2b9548bacecce82610e2796020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610131565b60008181526000805160206113f383398151915260205260409020546000805160206113d3833981519152906001600160a01b03163381148061037f57506001600160a01b0381166000908152600483016020908152604080832033845290915290205460ff165b6103c15760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b600083815260038301602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b60008181526000805160206113f383398151915260205260409020546000805160206113d3833981519152906001600160a01b038581169116146104935760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103b8565b6001600160a01b0383166104dd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b8565b336001600160a01b038516148061051957506001600160a01b0384166000908152600482016020908152604080832033845290915290205460ff165b8061053c575060008281526003820160205260409020546001600160a01b031633145b6105795760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103b8565b604051637cbab1c760e01b81526001600160a01b03808616600483015284166024820152604481018390523090637cbab1c790606401600060405180830381600087803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b5050506001600160a01b03808616600081815260028501602090815260408083208054600019019055938816808352848320805460019081019091558884528701825284832080546001600160a01b0319908116831790915560038801909252848320805490921690915592518694507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a450505050565b3360009081527f4973bd83c52c20d8da0afd0601fa08313c8e1c8be97b9487d8f935959fa7c33b602052604090205460ff166106c55760405162461bcd60e51b81526004016103b8906112ba565b6106cf8282610b44565b5050565b6106de838383610420565b6001600160a01b0382163b15806107965750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a401602060405180830381600087803b15801561075257600080fd5b505af1158015610766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078a91906111bd565b6001600160e01b031916145b6107b25760405162461bcd60e51b81526004016103b8906112de565b505050565b60008181526000805160206113f383398151915260205260409020546001600160a01b0316806108165760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103b8565b919050565b60006001600160a01b0382166108625760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103b8565b506001600160a01b031660009081527f57b5988df17516e060374e0264a58e0f7554bffd3e2b9548bacecce82610e277602052604090205490565b3360009081527f4973bd83c52c20d8da0afd0601fa08313c8e1c8be97b9487d8f935959fa7c33b602052604090205460ff166108eb5760405162461bcd60e51b81526004016103b8906112ba565b6108f784848484610cdf565b50505050565b3360009081527f4973bd83c52c20d8da0afd0601fa08313c8e1c8be97b9487d8f935959fa7c33b602052604090205460ff1661094b5760405162461bcd60e51b81526004016103b8906112ba565b6106cf8282610dac565b3360008181527f57b5988df17516e060374e0264a58e0f7554bffd3e2b9548bacecce82610e279602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109eb858585610420565b6001600160a01b0384163b1580610a915750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610a339033908a90899089908990600401611236565b602060405180830381600087803b158015610a4d57600080fd5b505af1158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8591906111bd565b6001600160e01b031916145b610aad5760405162461bcd60e51b81526004016103b8906112de565b5050505050565b60008181526000805160206113f383398151915260205260409020546060906001600160a01b0316610b155760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103b8565b610b1e82610e87565b604051602001610b2e91906111fd565b6040516020818303038152906040529050919050565b6001600160a01b038216610b8e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b8565b60008181526000805160206113f383398151915260205260409020546000805160206113d3833981519152906001600160a01b031615610c015760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103b8565b604051637cbab1c760e01b8152600060048201526001600160a01b0384166024820152604481018390523090637cbab1c790606401600060405180830381600087803b158015610c5057600080fd5b505af1158015610c64573d6000803e3d6000fd5b50508254600190810184556001600160a01b03861660008181526002860160209081526040808320805486019055888352938701905282812080546001600160a01b0319168317905591518694509092507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b610ce98484610b44565b6001600160a01b0384163b1580610d905750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610d32903390600090899089908990600401611236565b602060405180830381600087803b158015610d4c57600080fd5b505af1158015610d60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8491906111bd565b6001600160e01b031916145b6108f75760405162461bcd60e51b81526004016103b8906112de565b610db68282610b44565b6001600160a01b0382163b1580610e6b5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a401602060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5f91906111bd565b6001600160e01b031916145b6106cf5760405162461bcd60e51b81526004016103b8906112de565b606081610eab5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ed55780610ebf81611377565b9150610ece9050600a83611320565b9150610eaf565b60008167ffffffffffffffff811115610efe57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610f28576020820181803683370190505b5090505b8415610fa157610f3d600183611334565b9150610f4a600a86611392565b610f55906030611308565b60f81b818381518110610f7857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610f9a600a86611320565b9450610f2c565b949350505050565b80356001600160a01b038116811461081657600080fd5b60008083601f840112610fd1578182fd5b50813567ffffffffffffffff811115610fe8578182fd5b60208301915083602082850101111561100057600080fd5b9250929050565b600060208284031215611018578081fd5b61102182610fa9565b9392505050565b6000806040838503121561103a578081fd5b61104383610fa9565b915061105160208401610fa9565b90509250929050565b60008060006060848603121561106e578081fd5b61107784610fa9565b925061108560208501610fa9565b9150604084013590509250925092565b6000806000806000608086880312156110ac578081fd5b6110b586610fa9565b94506110c360208701610fa9565b935060408601359250606086013567ffffffffffffffff8111156110e5578182fd5b6110f188828901610fc0565b969995985093965092949392505050565b60008060408385031215611114578182fd5b61111d83610fa9565b915060208301358015158114611131578182fd5b809150509250929050565b6000806040838503121561114e578182fd5b61115783610fa9565b946020939093013593505050565b6000806000806060858703121561117a578384fd5b61118385610fa9565b935060208501359250604085013567ffffffffffffffff8111156111a5578283fd5b6111b187828801610fc0565b95989497509550505050565b6000602082840312156111ce578081fd5b81516001600160e01b031981168114611021578182fd5b6000602082840312156111f6578081fd5b5035919050565b7068747470733a2f2f6465666963616b652f60781b81526000825161122981601185016020870161134b565b9190910160110192915050565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a084013781830160a090810191909152601f909201601f19160101949350505050565b60208152600082518060208401526112a681604085016020870161134b565b601f01601f19169190910160400192915050565b6020808252600a90820152692727aa2fa6a4a72a22a960b11b604082015260600190565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000821982111561131b5761131b6113a6565b500190565b60008261132f5761132f6113bc565b500490565b600082821015611346576113466113a6565b500390565b60005b8381101561136657818101518382015260200161134e565b838111156108f75750506000910152565b600060001982141561138b5761138b6113a6565b5060010190565b6000826113a1576113a16113bc565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfe57b5988df17516e060374e0264a58e0f7554bffd3e2b9548bacecce82610e27557b5988df17516e060374e0264a58e0f7554bffd3e2b9548bacecce82610e276a264697066735822122066bd669152b3220039ae04f9b2b2eb8b76a24f80b2ef1e6f08fbc51e182b1f1064736f6c63430008040033",
  "devdoc": {
    "author": "EIP2325 implementation by DefiCake (https://github.com/DefiCake), based on solmate. Additional features:             - onBeforeTokenTransfer hook",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Modern, minimalist, and gas efficient ERC-721 implementation. Based on Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC721.sol)",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}